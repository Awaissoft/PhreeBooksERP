#summary How to submit a patch.

= Patches =

Here's what you need to do to get an environment that is ripe for making source modifications:


= Details =

 * *Issues* (tab next to this one)  is the system that Phreedom uses for bug tracking,
 * *Download and Install [http://tortoisesvn.tigris.org/ Tortoise] SVN* -  is the best Subversion client for Windows. It will let you get the latest source from the code repository.
 * *Install XAMPP* - If you're not already running Apache locally, you're going to need it. 
 * *Checkout a Copy of Phreedom* - Find the directory that XAMPP is using for its Document Root and right-click on it (or create a "phreedom" directory there and right-click on that). Select *_SVN Checkout_*.... In the dialog, use http://phreedom.googlecode.com/svn/trunk/ as the repository URL. Click OK to download the latest Phreedom source.
 * *Make a Database* - Use phpMyAdmin to create a new database for Phreedom. Navigate to http://localhost/phpmyadmin to see the interface.
 * *Run the Phreedom  Install* - I trust you already know how to do this. If not, then perhaps patching is a bit advanced, no?

Ok, now Phreedom is running. You should be able to do anything that you normally do with Phreedom.

At this point, you can modify code freely. If you make a change you don't like, you can always switch back to the original code. Right-click on the file, choose *_Tortoise SVN > Revert_* and the file will be restored to the last checkout version.

You should be able to see where you've made changes to the source by looking at the icon for the folder/file. The ones that are changed will likely be red.

Here's what you need to do to make a patch:

 * *Update your source* - This step is pretty important, otherwise you might end up patching bugs back into source that's already fixed. Subversion has integrated merge features. All you need to do is right-click on the phreedom root folder and select *_SVN Update_*. If any of the files you edited come up as conflicted (in red in the list), you will need to merge them by hand in the tool provided when you double-click on the list item.
 * *Create a patch* - This is easy. Right-click on the phreedom root folder and select *_Tortoise SVN - Create Patch_*. A dialog appears to allow you to select the files you want to include in the patch. Check the files you want to include, then save the patch file. If I'm patching one file, I'll usually use the full name of the file followed by ".diff", for example, "common_functions.php.diff".
 * *Find a Issue in Issues tracker* - To submit a patch, you need a Issue ticket. Be sure to search for an existing issue ticket for your issue before creating a new Issue ticket.  If one doesn't exist, create one and explain the problem as clearly as possible. When you have a ticket, click *_Attach  a file_* and attach your patch file.

That's pretty much it, even though I'm sure I've left some trivial things out.

The essential bit to recognize is that there really isn't a good excuse for a developer to know enough to make code changes but not enough to use source control. If you don't know source control, consider that learning this simple task is a great way to pad your resume. One way to scientifically demonstrate that you can work well with teams is to show a proficiency with source code control tools. Hopefully this short description will help you on your way.